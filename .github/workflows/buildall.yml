name: Build All

on:
  push:
    branches:    
      - release

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: 1. Checkout code ...
      uses: actions/checkout@v2

    - name: 2. Setup Node.js ${{ matrix.node-version }} ...
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: 3. Build ...
      run:
        npm run build --if-present
      env:
        CI: true
    
    - name: 4. Upload Images ...
      env:
        REG_USERNAME: ${{ secrets.REG_ALI_ACCOUNT }}
        REG_PASSWORD: ${{ secrets.REG_ALI_PASSWORD }}
      run: |
        docker login -u ${REG_USERNAME} -p ${REG_PASSWORD} registry.cn-hangzhou.aliyuncs.com
        docker tag chriswei/restapi:0.0.1 registry.cn-hangzhou.aliyuncs.com/weready/restapi:0.0.1
        docker push registry.cn-hangzhou.aliyuncs.com/weready/restapi:0.0.1
        docker logout registry.cn-hangzhou.aliyuncs.com
      
#    - name: x. Checkout source code ...
#      env:
#        REPO_TARGET: github.com/Clare-Huang/Athena.git
#        GIT_ACCOUNT_TOKEN: ${{ secrets.GIT_ACCOUNT_TOKEN }}
#      run: |
#        git clone https://${GIT_ACCOUNT_TOKEN}@${REPO_TARGET}
#        cd xxxxxx
